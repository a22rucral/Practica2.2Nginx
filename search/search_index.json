{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Practica 2.2 Ngiinx. Autenticaci\u00f3n.","text":"<pre><code>Requisitos ; La pr\u00e1ctica anterior debe estar funcionando correctamente. Con la redirecci\u00f3n HTTPS funcionando.\n</code></pre>"},{"location":"#introduccion","title":"Introducci\u00f3n.","text":"<p>Hablando de HTTP, la autenticaci\u00f3n de acceso b\u00e1sica, esta dise\u00f1ada para que un usuario tenga unas credenciales y pueda acceder a un navegador web, el programa le pedir\u00e1 las credenciales cuando realice la solicitud de este.</p> <p>Para esto, necesitaremos las herramientas openssl para crear las contrase\u00f1as.</p> <p>Primero, comprobaremos que el paquete est\u00e9 instalado. </p> <p></p> <p>Una vez comprobado, crearemos un archivo oculto, al que llamaremos '.htpasswd' en el directorio de configuracion /etc/nginx donde guardar nuestros usuarios y contrase\u00f1as. </p> <p></p> <p></p> <p>Este proceso, se puede repetir, tantas veces como usuarios quieras crear. Ahora entraremos en el archivo indicado previamente para comprobar la existencia de los usuarios y que se hayan guardado correctamente. </p> <p></p>"},{"location":"#configuracion-del-servidor-nginx-para-autenticacion-basica","title":"Configuraci\u00f3n del servidor Nginx para autenticaci\u00f3n b\u00e1sica.","text":"<p>Editaremos el archivo que se encuentra en /etc/nginx/sites-avaliable/tu_nombre para a\u00f1adir la restricci\u00f3n de autenticaci\u00f3n. </p> <p></p> <p>En el bloque de location, protegeremos la ra\u00edz, esto se indica con la '/ ' tras el location para indicar la ruta a la que quieres aplicar el bloque. Lo modificaremos de la siguiente manera: </p> <p></p> <p>Ahora reiniciaremos para aplicar la configuraci\u00f3n que hemos modificado y se muestre nuestra pol\u00edtica de acceso. </p> <p>Probaremos accediendo a nuestra p\u00e1gina web y nos saldr\u00e1 el siguiente mensaje : </p> <p></p> <p>En el caso de que cancelemos la autenticaci\u00f3n nos denegar\u00e1 el acceso a la p\u00e1gina web, diciendo que es necesario autenticarse. </p> <p></p> <p>Como tarea, hemos iniciado sesi\u00f3n con un usuario v\u00e1lido y con otro inv\u00e1lido. Estos logs lo podremos comprobar en la siguiente imagen, para tener constancia de quien hace peticiones a la p\u00e1gina web y cuales son exitosas y cuales no. </p> <p></p> <p>Al final de la foto, podremos ver un c\u00f3digo 401 que nos indicar\u00e1 error en la petici\u00f3n debido al fallo en la  autenticaci\u00f3n. </p> <p>Esto lo har\u00edamos en caso de querer aplicar la autenticaci\u00f3n a toda la p\u00e1gina web, ahora lo modificaremos para que afecte solo a un archivo en concreto. En mi caso a index2.html. Al cual accederemos mediante autenticaci\u00f3n. El archivo se lo indicaremos mediante su ruta despues de la palabra location y previo a la apertura de llaves. </p> <p></p>"},{"location":"#combinacion-de-la-autenticacion-basica-con-la-restriccion-de-acceso-por-ip","title":"Combinaci\u00f3n de la autenticaci\u00f3n b\u00e1sica con la restricci\u00f3n de acceso por IP.","text":"<p>Para m\u00e1s seguridad y mas filtros, junto a la autenticaci\u00f3n se puede implementar una restricci\u00f3n de IP, permitiendo o denegando el acceso de estas. Se puede hacer de forma independiente de la autenticaci\u00f3n. </p>"},{"location":"#tarea-1","title":"Tarea 1.","text":"<p>Configura nginx para que no deje acceder con la IP de la m\u00e1quina anfitriona al directorio ra\u00edz a tu web. Modifica su server block o archivo de configuraci\u00f3n y comprueba que niega el acceso. </p> <p>Cambiamos el bloque, denegando servicio a las IPs que se muestran en la captura, que en cada caso se personalizar\u00e1n con las vuestras.</p> <p></p> <p>Tras intentar acceder da error: </p> <p></p>"},{"location":"#tarea-2","title":"Tarea 2.","text":"<p>Configura Nginx para que desde tu m\u00e1quina anfitriona se tenga que tener tanto una IP v\u00e1lida como un usuario v\u00e1lido, ambas cosas a la vez, y comprueba si puede acceder sin problemas. </p> <p>Cambiaremos el bloque del servidor, permitiendo acceso a la IP de nuestra m\u00e1quina y pidiendo la autenticaci\u00f3n de usuarios.</p> <p></p> <p>Tras iniciar sesi\u00f3n desde mi m\u00e1quina : </p> <p></p> <p>Nos da acceso a la p\u00e1gina web, demostrando que tenemos tanto un usuario v\u00e1lido como una IP v\u00e1lida. </p> <p></p>"},{"location":"#cuestiones-finales","title":"Cuestiones Finales.","text":""},{"location":"#cuestion-1","title":"Cuestion 1","text":"<p>Supongamos que yo soy cliente con la IP 172.1.10.15 e intento acceder al directorio web_muy_guay de mi sitio web, equivoc\u00e1ndome al poner el usuario y contrase\u00f1a. \u00bfPodr\u00e9 acceder?\u00bfPor qu\u00e9?</p> <pre><code>    location /web_muy_guay {\n    #...\n    satisfy all;    \n    deny  172.1.10.6;\n    allow 172.1.10.15;\n    allow 172.1.3.14;\n    deny  all;\n    auth_basic \"Cuesti\u00f3n final 1\";\n    auth_basic_user_file conf/htpasswd;\n}\n</code></pre> <p>No podr\u00e1s acceder, ya que al tener puesto satisfy all tendr\u00e1s que pasar tanto el filtro de IP v\u00e1lida como el de autenticaci\u00f3n de usuario. Al fallar en este \u00faltimo te denegar\u00e1 el acceso. </p>"},{"location":"#cuestion-2","title":"Cuestion 2","text":"<p>Supongamos que yo soy el cliente con la IP 172.1.10.15 e intento acceder al directorio web_muy_guay de mi sitio web, introduciendo correctamente usuari y contrase\u00f1a. \u00bfPodr\u00e9 acceder?\u00bfPor qu\u00e9?</p> <pre><code>        location /web_muy_guay {\n    #...\n    satisfy all;    \n    deny  all;\n    deny  172.1.10.6;\n    allow 172.1.10.15;\n    allow 172.1.3.14;\n\n    auth_basic \"Cuesti\u00f3n final 2: The revenge\";\n    auth_basic_user_file conf/htpasswd;\n        }\n</code></pre> <p>No podr\u00e1s acceder, ya que al ser deny all lo primero que se evalua, te denegar\u00e1 el acceso, la soluci\u00f3n ser\u00eda ponerlo al final, y poner las instrucciones m\u00e1s espec\u00edficas al principio. </p>"},{"location":"#cuestion-3","title":"Cuestion 3","text":"<p>Supongamos que yo soy el cliente con la IP 172.1.10.15 e intento acceder al directorio web_muy_guay de mi sitio web, introduciendo correctamente usuario y contrase\u00f1a. \u00bfPodr\u00e9 acceder?\u00bfPor qu\u00e9?</p> <pre><code>    location /web_muy_guay {\n    #...\n    satisfy any;    \n    deny  172.1.10.6;\n    deny 172.1.10.15;\n    allow 172.1.3.14;\n\n    auth_basic \"Cuesti\u00f3n final 3: The final combat\";\n    auth_basic_user_file conf/htpasswd;\n}\n</code></pre> <p>En este caso podr\u00e1s acceder, ya que la IP est\u00e1 permitida y has puesto correctamente las credenciales de usuario. </p>"},{"location":"#cuestion-4","title":"Cuestion 4","text":"<p>A lo mejor no sab\u00e9is que tengo una web para documentar todas mis excursiones espaciales con Jeff, es esta: Jeff Bezos y yo</p> <p>Supongamos que quiero restringir el acceso al directorio de proyectos porque es muy secreto, eso quiere decir a\u00f1adir autenticaci\u00f3n b\u00e1sica a la URL:Proyectos</p> <p>Completa la configuraci\u00f3n para conseguirlo:</p> <pre><code>    server {\n        listen 80;\n        listen [::]:80;\n        root /var/www/freewebsitetemplates.com/preview/space-science;\n        index index.html index.htm index.nginx-debian.html;\n        server_name freewebsitetemplates.com www.freewebsitetemplates.com;\n        location /projects.html{\n            auth_basic \"Autenticaci\u00f3n Proyectos\";\n            auth_basic_user_file conf/htpasswd;\n\n            try_files $uri $uri/ =404;\n        }\n    }\n</code></pre> <p>En primer lugar pondremos la ruta del archivo tras el location, para que solo se aplique en ese archivo de la p\u00e1gina web, despu\u00e9s pondremos el c\u00f3digo necesario para pedir la autenticaci\u00f3n. </p>"}]}